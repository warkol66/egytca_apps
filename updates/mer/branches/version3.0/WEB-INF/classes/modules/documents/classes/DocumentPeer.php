<?php
// The parent class
require_once 'mer/om/BaseDocumentPeer.php';

// The object class
include_once 'mer/Document.php';

/** 
 * The skeleton for this class was autogenerated by Propel on:
 *
 * [10/23/06 13:29:49]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 *
 * @package mer 
 */
class DocumentPeer extends BaseDocumentPeer {




	function getAll() {
		$cond = new Criteria();
		$todosObj = DocumentPeer::doSelect($cond);
		return $todosObj;
  }


	function insert($filename,$description,$date,$type,$real_filename,$password) {
	
		try{
		$document = new Document();
		$document->setDate(now);
		$document->setFilename($filename);
		$document->setCategoryid($type);
		$document->setDescription($description);
		$document->setDocumentdate($date);
		$document->setRealfilename($real_filename);
		if(!empty($password)){
			$document->setPassword(md5($password."ASD"));
		}
		$document->save();
		}catch (PropelException $e) {}
		return;
	}



	function getArchive($id) {
		   	$obj = DocumentPeer::retrieveByPK($id);
		return $obj;
	}



	function getDocumentsType($id) {
				$cond = new Criteria();
				$cond->add(DocumentPeer::CATEGORYID, $id);
		$obj = DocumentPeer::doSelect($cond);
		return $obj;
	}


	function updateDocument($id,$description,$document_date,$category,$password) {
		$obj = DocumentPeer::retrieveByPK($id);
		$obj->setDescription($description);
		$obj->setDocumentdate($document_date);
		$obj->setCategoryid($category);
		if (!empty($password)){
			$obj->setPassword(md5($password."ASD"));
		}
			else $obj->setPassword();
		$obj->save();
		return;
	}

	function updateDocumentWithoutPass($id,$description,$document_date,$category) {
		$obj = DocumentPeer::retrieveByPK($id);
		$obj->setDescription($description);
		$obj->setDocumentdate($document_date);
		$obj->setCategoryid($category);
		$obj->save();
		return;
	}



	function delete($id)
		{ 	try{
			$obj = new Document();
			$obj = DocumentPeer::retrieveByPK($id);
			if(!empty($obj))
				{
					$obj->delete();
				}
		}catch (PropelException $e) {}
		return;
		}




}
