<?php

/** 
 * The skeleton for this class was autogenerated by Propel on:
 *
 * [Tue Jul 18 18:52:56 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 *
 * @package mer
 */
class HierarchyPeer extends BaseHierarchyPeer {

	/**
	* Elimina todos los actores para una categoria.
	*
	* @param int $category Id de la categoria
	* @return void
	*/
	function deleteByCategory($category) {
		$cond = new Criteria();
		$cond->add(HierarchyPeer::CATEGORYID, $category);
		$objs = HierarchyPeer::doSelect($cond);
		foreach ($objs as $obj)
			$obj->delete();
		return;
	}

	/**
	* Agrega una jerarquia.
	*
	* @param int $actor Id del actor
	* @param int $category Id de la categoria
	* @param int $position Orden en la jerarquia
	* @return void
	*/
	function add($actor,$category,$position) {
		$hierarchy = new Hierarchy();
		$hierarchy->setActorId($actor);
		$hierarchy->setCategoryId($category);
		$hierarchy->setPosition($position);
		$hierarchy->save();
		return;
	}
	
	/**
	* Obtiene todos los actores asociados a una categoria.
	*
	* @param int $category Id de la categoria
	* @return array Jerarquias con los actores asociados
	*/
	function getByCategory($category) {
		$cond = new Criteria();
		$cond->add(HierarchyPeer::CATEGORYID, $category);
		$cond->addAscendingOrderByColumn(HierarchyPeer::POSITION);
		$objs = HierarchyPeer::doSelectJoinActor($cond);
		return $objs;
	}

}
