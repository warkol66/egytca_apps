<?php

/** 
 * The skeleton for this class was autogenerated by Propel on:
 *
 * [Tue Jul 18 18:52:56 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 *
 * @package mer 
 */
class QuestionPeer extends BaseQuestionPeer {

	function get($id) {
  	$obj = QuestionPeer::retrieveByPK($id);
  	return $obj;
	}
	
  /**
  * Obtiene todas las preguntas de analisis.
	*
	*	@return array Informacion sobre todas las preguntas de analisis
  */
	function getAllAnalysis() {
		$cond = new Criteria();
		$cond->add(QuestionPeer::ANALYSIS, 1);
		$todosObj = QuestionPeer::doSelect($cond);
		return $todosObj;
  }
  
  function addAnalysisQuestion($questionId) {
  	$question = QuestionPeer::get($questionId);
		$question->setAnalysis(1);
		$question->save();
  }

  function deleteAnalysisQuestion($questionId) {
  	$question = QuestionPeer::get($questionId);
		$question->setAnalysis(0);
		$question->save();
  }
	
  function addLabelToQuestion($questionId,$label) {
  	try {
			$question = QuestionPeer::get($questionId);
  		$question->setLabel($label);
			$question->save();
			return true;
		}
		catch (PropelException $e) {
			return false;
		}
  }

  function deleteLabelToQuestion($questionId) {
  	$question = QuestionPeer::get($questionId);
		$question->setLabel(null);
		$question->save();
  }

  function setJudgement($questionId,$actorId,$judgement) {
		$question = QuestionPeer::get($questionId);
		$answer = $question->getAnswer(ActorPeer::get($actorId));
		$answer->setJudgement($judgement);
		$answer->setOld(0);
		$answer->save();
  }
  
  /**
  * Obtiene todas las preguntas con label.
	*
	*	@return array Informacion sobre todas las preguntas con label
  */
	function getAllWithLabel() {
		$cond = new Criteria();
		$cond->add(QuestionPeer::LABEL, "", Criteria::NOT_EQUAL);
		$todosObj = QuestionPeer::doSelect($cond);
		return $todosObj;
  }
  
  /**
  * Obtiene una pregunta a partir de su label.
	*
	*	@return Question Pregunta
  */
	function getByLabel($label) {
		$cond = new Criteria();
		$cond->add(QuestionPeer::LABEL, $label);
		$todosObj = QuestionPeer::doSelect($cond);
		return $todosObj[0];
  }
  
  /*
  * Obtiene todas las preguntas.
  *
  * @params boolean $relationship Si no se pasa, obtiene todas las preguntas. Si se pasa true, obtiene solo las de 
  *																relacion. Si se pasa false, solo las de perfil.
  * @return array Array de Question
  */
  function getAll($relationship = null) {
		$formsC = new Criteria();
		if ($relationship === true)
			$formsC->add(FormPeer::RELATIONSHIP,true);
		if ($relationship === false)
			$formsC->add(FormPeer::RELATIONSHIP,false);
		$forms = FormPeer::doSelect($formsC);
		$questions = array();
		foreach ($forms as $form) {
			$questions = array_merge($questions,$form->getAllQuestions());
		}
		return $questions;
  }



}
