<?php

/** 
 * The skeleton for this class was autogenerated by Propel on:
 *
 * [08/16/06 22:45:26]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 *
 * @package mer 
 */
class GraphModelAxisPeer extends BaseGraphModelAxisPeer {

  /**
  * Crea un valor de un eje de un grafico.
  *
  * @param int $graphId Id del grafico
  * @param string $axis Eje al cual corresponde el valor
	* @param int $type Tipo de valor
	* @param int $questionId Id de la pregunta
	* @return boolean true si se creo correctamente, false sino
	*/
	function create($graphId,$axis,$type,$questionId) {
		$graphModelAxis = new GraphModelAxis();
		$graphModelAxis->setGraphId($graphId);
		$graphModelAxis->setAxis($axis);
		$graphModelAxis->setType($type);
		$graphModelAxis->setQuestionId($questionId);
		$graphModelAxis->save();
	}

	function getByGraphIdAndAxisAndType($graphId,$axis,$type) {
		$cond = new Criteria();
		$cond->add(GraphModelAxisPeer::GRAPHID, $graphId);
		$cond->add(GraphModelAxisPeer::AXIS, $axis);
		if ($type < 4)
			$cond->add(GraphModelAxisPeer::TYPE, $type);
		else
      $cond->add(GraphModelAxisPeer::TYPE, 3, Criteria::GREATER_THAN);
		$graphModelAxes = GraphModelAxisPeer::doSelect($cond);
		return $graphModelAxes;
	}
	
	function getQuestionIdsByGraphIdAndAxisAndType($graphId,$axis,$type) {
		$graphModelAxes = GraphModelAxisPeer::getByGraphIdAndAxisAndType($graphId,$axis,$type);
		$questionIds = array();
		foreach ($graphModelAxes as $question) {
    	$questionIds[] = $question->getQuestionId();
		}
		return $questionIds;
	}

}
