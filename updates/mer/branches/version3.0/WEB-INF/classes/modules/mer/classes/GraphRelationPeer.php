<?php
// The parent class
require_once 'mer/om/BaseGraphRelationPeer.php';

// The object class
include_once 'mer/GraphRelation.php';

require_once 'GraphRelationQuestionPeer.php';

/** 
 * The skeleton for this class was autogenerated by Propel on:
 *
 * [11/06/06 18:31:19]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 *
 * @package mer 
 */
class GraphRelationPeer extends BaseGraphRelationPeer {


	function create($name,$actor1,$actor2,$judgement,$questionsId) {
		$graph = new GraphRelation();
		$graph->setName($name);
		$graph->setActor1Id($actor1->getId());
    $graph->setActor2Id($actor2->getId());
    $graph->setJudgement($judgement);
    $graph->setOld(0);
    $graph->save();
    foreach ($questionsId as $questionId) {
    	$graphQuestion = new GraphRelationQuestion();
    	$graphQuestion->setGraphRelationId($graph->getId());
      $graphQuestion->setQuestionId($questionId);
      $graphQuestion->save();
    }  
	}
	
	function getByRelation($actor1,$actor2) {
		$crit = new Criteria();
		$crit->add(GraphRelationPeer::ACTOR1ID,$actor1->getId());
		$crit->add(GraphRelationPeer::ACTOR2ID,$actor2->getId());
		$todosObj = GraphRelationPeer::doSelect($crit);
		return $todosObj;
	}
	
	function getByActor($actor1) {
		$crit = new Criteria();
		$crit->add(GraphRelationPeer::ACTOR1ID,$actor1->getId());
		$todosObj = GraphRelationPeer::doSelect($crit);
		return $todosObj;
	}
	
  /**
  * Obtiene la informacion de un grafico.
  *
  * @param int $id Id del grafico
  * @return GraphRelation Grafico
  */
	function get($id) {
  	$graph = GraphRelationPeer::retrieveByPK($id);
  	return $graph;
	}
	
  /**
  * Elimina un grafico.
  *
  * @param int $id Id del grafico
  * @return true
  */
	function delete($id) {
  	$graph = GraphRelationPeer::retrieveByPK($id);
  	GraphRelationQuestionPeer::deleteByGraph($graph);
  	$graph->delete();
  	return true;
	}

}
